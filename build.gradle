plugins {
    id "fabric-loom" apply false
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "com.modrinth.minotaur" version "2.+"
}

allprojects {
    apply plugin: "fabric-loom"

    repositories {
        maven { url 'https://jitpack.io' }
        maven {
            url = "https://maven.blamejared.com/"
            content {
                includeGroup "mezz.jei"
            }
        }
        maven {
            name = "Shedaniel Maven"
            url = "https://maven.shedaniel.me/"
        }
        maven {
            name = "TerraformersMC"
            url = "https://maven.terraformersmc.com/"
        }
        maven {
            name = "Modrinth Maven"
            url = "https://api.modrinth.com/maven"
        }
        maven {
            name = "CurseMaven"
            url = "https://cursemaven.com"
        }
        maven { url = "https://mvn.devos.one/snapshots/" }
        maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }
        maven { url = "https://maven.tterrag.com/" }
    }

    archivesBaseName = project.archives_base_name

    ext.buildNumber = System.getenv("GITHUB_RUN_NUMBER")
    version = project.mod_version + (buildNumber != null ? "+${buildNumber}-" : "-") + project.version_stage

    ext.isAlpha = project.version_stage == "ALPHA"
    ext.isBeta = project.version_stage == "BETA"

    group = project.maven_group

    dependencies {
        include modImplementation("blue.endless:jankson:${project.jankson_version}")
    }

    processResources {
        inputs.property "version", project.version
        filteringCharset "UTF-8"

        filesMatching("fabric.mod.json") {
            expand "version": project.version
        }
    }

    def targetJavaVersion = 17
    tasks.withType(JavaCompile).configureEach {
        // ensure that the encoding is set to UTF-8, no matter what the system default is
        // this fixes some edge cases with special characters not displaying correctly
        // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
        // If Javadoc is generated, this must be specified in that task too.
        it.options.encoding = "UTF-8"
        if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
            it.options.release = targetJavaVersion
        }
    }

    java {
        def javaVersion = JavaVersion.toVersion(targetJavaVersion)
        if (JavaVersion.current() < javaVersion) {
            toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
        }
        // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
        // if it is present.
        // If you remove this line, sources will not be generated.
        withSourcesJar()
    }

    jar {
        from("LICENSE") {
            rename { "${it}_${archivesBaseName}" }
        }
    }
}

if (System.getenv("GITHUB_ENV")) {
    def envFile = new File(System.getenv("GITHUB_ENV"))
    envFile.append("VERSION=${version}")
}

subprojects {
    configurations {
        // Fix dev env runtime
        modLocalRuntime.exclude group: 'net.fabricmc', module: 'fabric-loader'
    }

    dependencies {
        implementation(project(path: ":", configuration: "namedElements")) {
            // having 2 floaders from the sub project and root project causes issues so we get rid of one.
            exclude group: "net.fabricmc", module: "fabric-loader"
        }
    }
}

loom {
    runConfigs.configure {
        client {
            ideConfigGenerated = false
        }
        server {
            ideConfigGenerated = false
        }
    }
}

dependencies {
    include project(path: ':cobblegen-1.18.2-compat', configuration: 'namedElements')
    include project(path: ':cobblegen-1.19-compat', configuration: 'namedElements')
    include project(path: ':cobblegen-1.19.3-compat', configuration: 'namedElements')

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version_1_18_2}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings_1_18_2}:v2"
    minecraft "com.mojang:minecraft:${project.minecraft_version_1_18_2}"
    modCompileOnlyApi("net.fabricmc.fabric-api:fabric-api:${project.fabric_version_1_18_2}")

    modCompileOnlyApi("com.tterrag.registrate_fabric:Registrate:MC1.18.2-1.1.7")
    modCompileOnlyApi("io.github.fabricators_of_create:Porting-Lib:${project.port_lib_version_1_18_2}")
    modCompileOnlyApi("com.simibubi.create:create-fabric-${project.minecraft_version_1_18_2}:${project.create_version_1_18_2}")
    modCompileOnlyApi("dev.emi:emi:${project.emi_version}+${project.minecraft_version_1_18_2}:api")
    modCompileOnlyApi("me.shedaniel:RoughlyEnoughItems-api-fabric:$project.rei_version_1_18_2")
    modCompileOnlyApi("mezz.jei:${project.jei_version_1_18_2}") {
        transitive = false
    }

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
}

processResources {
    from("${rootDir}/assets/icon.png") {
        into "assets/cobblegen/"
    }
}

def supportedVersions = [
        "1.18.2",
        "1.19",
        "1.19.1",
        "1.19.2",
        "1.19.3",
        "1.19.4"
]

if (System.getenv("CURSEFORGE")) {
    def cfReleaseType = "release"
    if (ext.isAlpha) {
        cfReleaseType = "alpha"
    } else if (ext.isBeta) {
        cfReleaseType = "beta"
    }

    curseforge {
        apiKey = System.getenv("CURSEFORGE")
        project {
            id = project.curseforge_project
            changelogType = "markdown"
            changelog = System.getenv("CHANGELOG") ?: "Please visit our [releases](https://github.com/null2264/CobbleGen/releases) for a changelog"
            releaseType = cfReleaseType
            for (final def mcVersion in supportedVersions) {
                addGameVersion mcVersion
            }
            addGameVersion "Fabric"
            addGameVersion "Quilt"
            addGameVersion "Java 17"
            mainArtifact(remapJar.archiveFile) {
                displayName = "v${project.mod_version}-${project.version_stage}"
                relations {
                    embeddedLibrary "jankson"
                }
            }
        }
        options {
            forgeGradleIntegration = false
        }
        afterEvaluate {
            tasks.getByName("curseforge${project.curseforge_project}").dependsOn remapJar
        }
    }
}

if (System.getenv("MODRINTH")) {
    def mrReleaseType = "release"
    if (ext.isAlpha) {
        mrReleaseType = "alpha"
    } else if (ext.isBeta) {
        mrReleaseType = "beta"
    }

    modrinth {
        token = System.getenv("MODRINTH")
        changelog = System.getenv("CHANGELOG") ?: "Please visit our [releases](https://github.com/null2264/CobbleGen/releases) for a changelog"
        projectId = project.modrinth_project
        versionName = "v${project.mod_version}-${project.version_stage}"
        versionNumber = version as String
        versionType = mrReleaseType
        uploadFile = remapJar
        gameVersions = supportedVersions
        loaders = [ "fabric", "quilt" ]
    }
}