name: release
on:
  release:
    types: [ published ]

jobs:
  deploy:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Gradle
        uses: null2264/actions/gradle-setup@9e0939f31a8e3a37cf8a5643fe6b3365cd7cb46a
        with:
          java: 21

      - name: Setup NeoForge Kits for snapshots
        uses: null2264/actions/neoforge-snapshot@9e0939f31a8e3a37cf8a5643fe6b3365cd7cb46a
        with:
          mc-version: 24w14a
          skip-gradle-setup: 'true'

      - name: Get mod versions
        id: get-mod-versions
        run: |
          echo "versions=$(ls versions | grep -e '.\.' | tr '\n' ' ')" >> $GITHUB_OUTPUT

      - name: Build with Gradle
        uses: null2264/actions/replaymod-preprocessor-compile@9e0939f31a8e3a37cf8a5643fe6b3365cd7cb46a
        with:
          versions: ${{ steps.get-mod-versions.outputs.versions }}

      - name: Archive build results
        run: tar -I zstd -cf build.tar.zst versions/*/build/libs

      - name: Upload build folders
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build.tar.zst
          if-no-files-found: error
          retention-days: 3

      - name: Upload to CurseForge and Modrinth
        run: ./gradlew publishMods --stacktrace --no-daemon --max-workers 1
        env:
          CHANGELOG: ${{ github.event.release.body }}
          CURSEFORGE: ${{ secrets.CURSEFORGE }}
          MODRINTH: ${{ secrets.MODRINTH }}

  upload-release-artifacts:
    name: Upload Release Artifacts
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Unpack build artifact
        run: tar axf build.tar.zst

      - name: Upload Release Artifact
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            versions/*/build/libs/!(*-dev-shade|*-sources).jar
